# functional lists: length
# This uses a functional representation of lists: the functions for head and tail (hd and tl) return abort if their argument is an empty list. The abort supercombinator 
# just generates an infinite loop. cons is used to cons-truct a list and nil is the empty list

fcons a b cc cn = cc a b;
fnil cc cn = cn;
fhd list = list K abort;
ftl list = list K1 abort;

length xs = xs length1 0;
length1 x xs = 1 + (length xs);

# list of length 4
list = (fcons 0 (fcons 1 (fcons 2 (fcons 3 fnil))));
main = length list