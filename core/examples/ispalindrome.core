# haskell 99 http://www.haskell.org/haskellwiki/H-99:_Ninety-Nine_Haskell_Problems
# problem 6

from n = cons n (from (n + 1));

take n xs = if (n == 0) nil (case xs of
	<4> -> nil,
	<3> p ps -> cons p (take (n-1) ps));

reverse2 xs ys = case xs of
	<4> -> ys,
	<3> p ps -> reverse2 ps (cons p ys);
reverse xs = reverse2 xs nil;

equals2 xs x ys = case xs of <4> -> (x == nil), <3> p ps -> (equals2 xs p ys);	
equals xs ys = case xs of <4> -> (equals2 xs nil ys), <3> p ps -> (equals2 xs p ys);	

ispalindrome xs = equals xs (reverse xs);

list = cons 1 (cons 2 (cons 1 nil));
main = equals nil nil